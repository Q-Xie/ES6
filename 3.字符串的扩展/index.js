/*
* 字符的Unicode表示法
* ES6 加强了对Unicode的支持，允许采用\uxxxx的形式表示一个字符，其中xxxx表示字符的Unicode码点
* */


/*
* 2字符串的遍历器接口
*   ES6为字符串添加了遍历器接口（详见《Iterator》一章),使得字符串可以被for...of循环遍历。
* */
for(let codePoint of 'foo') {
  console.log(codePoint)
}

/*
* 除了遍历字符串，这个遍历器最大的优点是可以识别大于0xFFFF的码点，传统的for循环无法识别这样的码点。
* */

/*
* JSON.stringify()的改造
*  根据标准，JSON数据必须是UTF-8编码。但是，现在的JSON.stringify()方法有可能返回不符合UTF-8标准的字符。
*  具体来说，UTF-8标准规定，0xD800到0xDFFF之间的码点，不能单独使用，必须配对使用。
* */


/*
* 模板字符串
*   传统的JS语言，输出末班通常这些写
* */
let a = 112
'There are <b>' + a+ '</b>'+ 'are on sale'
/*
* 上面这种写法相当繁琐且不便，ES6引入了模板字符串解决这个问题
* */
let message = `There are ${a}are on sale`
console.log(message)
/*
* 模板字符串是增强版的字符串，用反引号标识，它可以当做普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量
* */

/*
* 模板字符串都是用反引号表示，如果在模板字符串中需要使用反引号，则前面要用反斜杠转义。
* */
let greeting = `\`Yo\` World!`

/*
* 模板字符串还可以调用函数。
* */



/*
* 标签模板
*   模板字符串可以紧跟在有一个函数名后面，该函数将被调用来处理这些模板字符串。这被称为标签模板功能
* */
console.log`123`

// 等同于alert(123)



/*
* 模板字符串的限制
*   模板字符串默认会将字符串转义，导致无法嵌入其他语言。
* */



























